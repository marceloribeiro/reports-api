// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ReportRequestStatus {
  PENDING
  CANCELED
  PROCESSING
  PROCESSED
  ERROR
}

model User {
  id String @id @default(uuid())
  email String @unique()
  hashed_password String
  salt Int
  jti String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  report_requests ReportRequest[]
  reports Report[]
  @@map("users")
}

model ReportRequest {
  id String @id @default(uuid())
  user_id String
  status ReportRequestStatus @default(PENDING)
  scheduled_at DateTime @default(now())
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  report Report?
  @@map("report_requests")
}

model Report {
  id String @id @default(uuid())
  user_id String
  report_request_id String @unique
  title String
  description String
  result String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  report_request ReportRequest @relation(fields: [report_request_id], references: [id], onDelete: Cascade)
  @@map("reports")
}